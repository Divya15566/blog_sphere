{"ast":null,"code":"/**\n * react-router v7.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = msg => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// dom-export.ts\nvar dom_export_exports = {};\n__export(dom_export_exports, {\n  HydratedRouter: () => HydratedRouter,\n  RouterProvider: () => RouterProvider2\n});\nmodule.exports = __toCommonJS(dom_export_exports);\n\n// lib/dom-export/dom-router-provider.tsx\nvar React10 = __toESM(require(\"react\"));\nvar ReactDOM = __toESM(require(\"react-dom\"));\n\n// lib/router/history.ts\nvar PopStateEventType = \"popstate\";\nfunction createBrowserHistory() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  function createBrowserLocation(window2, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window2.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to) {\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let key = arguments.length > 3 ? arguments[3] : undefined;\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let {\n    window: window2 = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({\n      ...globalHistory.state,\n      idx: index\n    }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, `No window.location.(origin|href) available to create URL for href: ${href}`);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nvar _map;\nvar unstable_RouterContextProvider = class {\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(key);\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"unstable_middleware\", \"children\"]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(key);\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2) {\n  let parentPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let manifest = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, `Cannot specify children on an index route`);\n    invariant(!manifest[id], `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`);\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg) {\n  let basename = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"/\";\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes) {\n  let branches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let parentsMeta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let parentPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`);\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let allowPartial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo2, _ref2, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref2;\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo2[paramName] = void 0;\n    } else {\n      memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo2;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path) {\n  let caseSensitive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {}\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to) {\n  let fromPathname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"/\";\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(path)}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n}\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  let isPathRelative = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = {\n      ...toArg\n    };\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(data2, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nvar redirect = function (url) {\n  let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 302;\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, {\n    ...responseInit,\n    headers\n  });\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2) {\n    let internal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\nvar validMutationMethods = new Set(validMutationMethodsArr);\nvar validRequestMethodsArr = [\"GET\", ...validMutationMethodsArr];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== void 0);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  }\n  let router2;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */new Map(),\n    blockers: /* @__PURE__ */new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */new Set();\n  let fetchControllers = /* @__PURE__ */new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */new Map();\n  let fetchRedirectIds = /* @__PURE__ */new Set();\n  let fetchLoadMatches = /* @__PURE__ */new Map();\n  let activeFetchers = /* @__PURE__ */new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */new Set();\n  let blockerFunctions = /* @__PURE__ */new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(_ref3 => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref3;\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = void 0;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: void 0,\n              reset: void 0,\n              location\n            });\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router2;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: unmountedFetchers,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    unmountedFetchers.forEach(key => deleteFetcher(key));\n    mountedFetchers.forEach(key => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState) {\n    let {\n      flushSync: flushSync2\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {} else if (pendingAction === \"POP\" /* Pop */) {} else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState({\n      ...newState,\n      // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }, {\n      viewTransitionOpts,\n      flushSync: flushSync2 === true\n    });\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, to, opts?.fromRouteId, opts?.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {} else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync: flushSync2\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: \"error\" /* error */,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(request, location, opts.submission, matches, scopedContext, fogOfWar.active, opts && opts.initialHydration === true, {\n        replace: opts.replace,\n        flushSync: flushSync2\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync2 = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, scopedContext, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync2, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration) {\n    let opts = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: \"error\" /* error */,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: \"error\" /* error */,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, actionMatch, initialHydration ? [] : hydrationRouteProperties2, scopedContext);\n      let results = await callDataStrategy(request, dsMatches, scopedContext, null);\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync2, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState({\n          navigation: loadingNavigation,\n          ...(actionData !== void 0 ? {\n            actionData\n          } : {})\n        }, {\n          flushSync: flushSync2\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      dsMatches,\n      revalidatingFetchers\n    } = getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, init.history, state, matches, activeSubmission, location, initialHydration ? [] : hydrationRouteProperties2, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some(m => m.shouldLoad) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        ...getActionDataForCommit(pendingActionResult),\n        ...(updatedFetchers2 ? {\n          fetchers: new Map(state.fetchers)\n        } : {})\n      }, {\n        flushSync: flushSync2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync: flushSync2\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, request, scopedContext);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);\n    if (initialHydration && state.errors) {\n      errors = {\n        ...state.errors,\n        ...errors\n      };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {})\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, href, routeId, opts?.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync2, preventScrollReset, submission);\n      return;\n    }\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    await handleFetcherLoader(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync2, preventScrollReset, submission);\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync: flushSync2\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync: flushSync2\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync: flushSync2\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, requestMatches, match, hydrationRouteProperties2, scopedContext);\n    let actionResults = await callDataStrategy(fetchRequest, fetchMatches, scopedContext, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let {\n      dsMatches,\n      revalidatingFetchers\n    } = getMatchesToLoad(revalidationRequest, scopedContext, mapRouteProperties2, manifest, init.history, state, matches, submission, nextLocation, hydrationRouteProperties2, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, revalidationRequest, scopedContext);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync: flushSync2\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync: flushSync2\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, matches, match, hydrationRouteProperties2, scopedContext);\n    let results = await callDataStrategy(fetchRequest, dsMatches, scopedContext, key);\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace: replace2\n    } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, false);\n    } catch (e) {\n      matches.filter(m => m.shouldLoad).forEach(m => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(request, matches, scopedContext, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.request && f.controller) {\n        let results = await callDataStrategy(f.request, f.matches, scopedContext, f.key);\n        let result = results[f.match.route.id];\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: \"error\" /* error */,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref4) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref4;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router2 = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router2;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref5) => {\n        let [name, value] = _ref5;\n        return `${acc}${name}=${value}\n`;\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex(m => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex(m => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let {\n      route\n    } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, forceShouldLoad);\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false :\n    // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n    isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match);\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, shouldRevalidateArgs);\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(history, f.path, fetchController.signal);\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs);\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return {\n    dsMatches,\n    revalidatingFetchers\n  };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, `No route found to patch children into: routeId = ${routeId}`);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every((aChild, i) => existingRoute.children?.some(bChild => isSameRoute(aChild, bChild)));\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */new WeakMap();\nvar loadLazyRouteProperty = _ref6 => {\n  let {\n    key,\n    route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  } = _ref6;\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(!isUnsupported, \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\");\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(false, `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`);\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, {\n          [key]: value\n        });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every(value => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(typeof route.lazy === \"function\", \"No lazy route function found\");\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 &&\n        // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(!isUnsupported, \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\");\n        } else if (isStaticallyDefined) {\n          warning(!isStaticallyDefined, `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`);\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {});\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {}) : void 0;\n  lazyRoutePromise?.catch(() => {});\n  lazyHandlerPromise?.catch(() => {});\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter(m => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some(m => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runMiddlewarePipeline(args, false, () => defaultDataStrategy(args), (error, routeId) => ({\n    [routeId]: {\n      type: \"error\",\n      result: error\n    }\n  }));\n}\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\n  let {\n    matches,\n    request,\n    params,\n    context\n  } = args;\n  let middlewareState = {\n    handlerResult: void 0\n  };\n  try {\n    let tuples = matches.flatMap(m => m.route.unstable_middleware ? m.route.unstable_middleware.map(fn => [m.route.id, fn]) : []);\n    let result = await callRouteMiddleware({\n      request,\n      params,\n      context\n    }, tuples, propagateResult, middlewareState, handler);\n    return propagateResult ? result : middlewareState.handlerResult;\n  } catch (e) {\n    if (!middlewareState.middlewareError) {\n      throw e;\n    }\n    let result = await errorHandler(middlewareState.middlewareError.error, middlewareState.middlewareError.routeId);\n    if (propagateResult || !middlewareState.handlerResult) {\n      return result;\n    }\n    return Object.assign(middlewareState.handlerResult, result);\n  }\n}\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler) {\n  let idx = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let {\n    request\n  } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(`Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`);\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    middlewareState.handlerResult = await handler();\n    return middlewareState.handlerResult;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    let result = await callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx + 1);\n    if (propagateResult) {\n      nextResult = result;\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware({\n      request: args.request,\n      params: args.params,\n      context: args.context\n    }, next);\n    if (nextCalled) {\n      if (result === void 0) {\n        return nextResult;\n      } else {\n        return result;\n      }\n    } else {\n      return next();\n    }\n  } catch (error) {\n    if (!middlewareState.middlewareError) {\n      middlewareState.middlewareError = {\n        routeId,\n        error\n      };\n    } else if (middlewareState.middlewareError.error !== error) {\n      middlewareState.middlewareError = {\n        routeId,\n        error\n      };\n    }\n    throw error;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(match.route, isMutationMethod(request.method) ? \"action\" : \"loader\", manifest, mapRouteProperties2, lazyRoutePropertiesToSkip);\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad) {\n  let unstable_shouldRevalidateArgs = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip);\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({\n        type: \"data\" /* data */,\n        result: void 0\n      });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext) {\n  let shouldRevalidateArgs = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  return matches.map(match => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip),\n        resolve: () => Promise.resolve({\n          type: \"data\",\n          result: void 0\n        })\n      };\n    }\n    return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, true, shouldRevalidateArgs);\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some(m => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map(m => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\");\n  } : cb => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runMiddlewarePipeline(typedDataStrategyArgs, false, () => cb({\n      ...typedDataStrategyArgs,\n      fetcherKey,\n      unstable_runClientMiddleware: () => {\n        throw new Error(\"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\");\n      }\n    }), (error, routeId) => ({\n      [routeId]: {\n        type: \"error\",\n        result: error\n      }\n    }));\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(matches.flatMap(m => [m._lazyPromises?.handler, m._lazyPromises?.route]));\n  } catch (e) {}\n  return results;\n}\nasync function callLoaderOrAction(_ref7) {\n  let {\n    request,\n    match,\n    lazyHandlerPromise,\n    lazyRoutePromise,\n    handlerOverride,\n    scopedContext\n  } = _ref7;\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = handler => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: scopedContext\n      }, ...(ctx !== void 0 ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }),\n        // Ensure all lazy route promises are resolved before continuing\n        lazyHandlerPromise, lazyRoutePromise]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return {\n            type: \"data\" /* data */,\n            result: void 0\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return {\n      type: \"error\" /* error */,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: \"error\" /* error */,\n        error: e\n      };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.init?.status || 500, void 0, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return {\n    type: \"data\" /* data */,\n    data: result\n  };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, location);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult) {\n  let isStaticHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let skipLoaderErrorBubbling = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult);\n  revalidatingFetchers.filter(f => !f.matches || f.matches.some(m => m.shouldLoad)).forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(_ref8 => {\n    let [, v] = _ref8;\n    return v !== ResetLoaderDataSymbol;\n  }).reduce((merged, _ref9) => {\n    let [k, v] = _ref9;\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({\n    ...parsedPath,\n    hash: \"\"\n  });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {}\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nvar React3 = __toESM(require(\"react\"));\n\n// lib/context.ts\nvar React = __toESM(require(\"react\"));\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(/* @__PURE__ */new Map());\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(null);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(null);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nvar React2 = __toESM(require(\"react\"));\nvar ENABLE_DEV_WARNINGS = true;\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useLocation() may be used only in the context of a <Router> component.`);\n  return React2.useContext(LocationContext).location;\n}\nvar OutletContext = React2.createContext(null);\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useRoutes() may be used only in the context of a <Router> component.`);\n  let {\n    navigator: navigator2,\n    static: isStatic\n  } = React2.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"), `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`);\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase), `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`);\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(parentRoute || matches != null, `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `);\n    warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`);\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */React2.createElement(LocationContext.Provider, {\n      value: {\n        location: {\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\",\n          ...location\n        },\n        navigationType: \"POP\" /* Pop */\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /* @__PURE__ */React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */React2.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */React2.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */React2.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /* @__PURE__ */React2.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */React2.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /* @__PURE__ */React2.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n};\nfunction RenderedRoute(_ref10) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref10;\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */React2.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches) {\n  let parentMatches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let dataRouterState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let future = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && errors?.[m.route.id] !== void 0);\n    invariant(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(\",\")}`);\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors: errors2\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */React2.createElement(RenderedRoute, {\n        match,\n        routeContext: {\n          outlet,\n          matches: matches2,\n          isDataRoute: dataRouterState != null\n        },\n        children\n      });\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */React2.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches: matches2,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique \"id\"`);\n  return thisRoute.route.id;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(false, \"You should not include both `Component` and `element` on your route - `Component` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\"HydrateFallback\", \"hydrateFallbackElement\"];\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider(_ref11) {\n  let {\n    router: router2,\n    flushSync: reactDomFlushSyncImpl\n  } = _ref11;\n  let [state, setStateImpl] = React3.useState(router2.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */new Map());\n  let setState = React3.useCallback((newState, _ref12) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync2,\n      viewTransitionOpts\n    } = _ref12;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== void 0) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    warnOnce(flushSync2 === false || reactDomFlushSyncImpl != null, 'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');\n    let isViewTransitionAvailable = router2.window != null && router2.window.document != null && typeof router2.window.document.startViewTransition === \"function\";\n    warnOnce(viewTransitionOpts == null || isViewTransitionAvailable, \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\");\n    if (!viewTransitionOpts || !isViewTransitionAvailable) {\n      if (reactDomFlushSyncImpl && flushSync2) {\n        reactDomFlushSyncImpl(() => setStateImpl(newState));\n      } else {\n        React3.startTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    if (reactDomFlushSyncImpl && flushSync2) {\n      reactDomFlushSyncImpl(() => {\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      let t = router2.window.document.startViewTransition(() => {\n        reactDomFlushSyncImpl(() => setStateImpl(newState));\n      });\n      t.finished.finally(() => {\n        reactDomFlushSyncImpl(() => {\n          setRenderDfd(void 0);\n          setTransition(void 0);\n          setPendingState(void 0);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      reactDomFlushSyncImpl(() => setTransition(t));\n      return;\n    }\n    if (transition) {\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router2.window, reactDomFlushSyncImpl, transition, renderDfd]);\n  React3.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router2.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router2.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router2.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router2.createHref,\n      encodeLocation: router2.encodeLocation,\n      go: n => router2.navigate(n),\n      push: (to, state2, opts) => router2.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router2.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router2]);\n  let basename = router2.basename || \"/\";\n  let dataRouterContext = React3.useMemo(() => ({\n    router: router2,\n    navigator: navigator2,\n    static: false,\n    basename\n  }), [router2, navigator2, basename]);\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, /* @__PURE__ */React3.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /* @__PURE__ */React3.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /* @__PURE__ */React3.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /* @__PURE__ */React3.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /* @__PURE__ */React3.createElement(Router, {\n    basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator2\n  }, /* @__PURE__ */React3.createElement(MemoizedDataRoutes, {\n    routes: router2.routes,\n    future: router2.future,\n    state\n  })))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes(_ref13) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref13;\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction Router(_ref14) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = \"POP\" /* Pop */,\n    navigator: navigator2,\n    static: staticProp = false\n  } = _ref14;\n  invariant(!useInRouterContext(), `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`);\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(() => ({\n    basename,\n    navigator: navigator2,\n    static: staticProp,\n    future: {}\n  }), [basename, navigator2, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(locationContext != null, `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`);\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */React3.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /* @__PURE__ */React3.createElement(LocationContext.Provider, {\n    children,\n    value: locationContext\n  }));\n}\n\n// lib/dom/ssr/components.tsx\nvar React9 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(/* @vite-ignore */\n    /* webpackIgnore: true */\n    route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(`Error loading route module \\`${route.module}\\`, reloading page...`);\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode &&\n    // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {});\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map(href => ({\n    rel: \"stylesheet\",\n    href\n  }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(`link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`)) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction getModuleLinkHrefs(matches, manifest) {\n  let {\n    includeHydrateFallback\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    if (!route) return [];\n    let hrefs = [route.module];\n    if (route.clientActionModule) {\n      hrefs = hrefs.concat(route.clientActionModule);\n    }\n    if (route.clientLoaderModule) {\n      hrefs = hrefs.concat(route.clientLoaderModule);\n    }\n    if (includeHydrateFallback && route.hydrateFallbackModule) {\n      hrefs = hrefs.concat(route.hydrateFallbackModule);\n    }\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar React4 = __toESM(require(\"react\"));\nvar import_turbo_stream = require(\"turbo-stream\");\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */new Set([100, 101, 204, 205]);\nfunction getSingleFetchDataStrategy(getRouter, getRouteInfo, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecodeViaTurboStream, ssr, basename);\n  return async args => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\n  return async args => {\n    let {\n      request,\n      matches,\n      fetcherKey\n    } = args;\n    let router2 = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some(m => {\n      let {\n        hasLoader,\n        hasClientLoader\n      } = getRouteInfo(m.route.id);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(args, router2, getRouteInfo, fetchAndDecode, ssr, basename);\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find(m => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async handler => {\n    let result2 = await handler(async () => {\n      let {\n        data: data2,\n        status\n      } = await fetchAndDecode(args, basename, [actionMatch.route.id]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return {\n      [actionMatch.route.id]: result\n    };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(m => m.unstable_shouldCallHandler());\n  let results = {};\n  await Promise.all(matchesToLoad.map(m => m.resolve(async handler => {\n    try {\n      let {\n        hasClientLoader\n      } = getRouteInfo(m.route.id);\n      let routeId = m.route.id;\n      let result = hasClientLoader ? await handler(async () => {\n        let {\n          data: data2\n        } = await fetchAndDecode(args, basename, [routeId]);\n        return unwrapSingleFetchResult(data2, routeId);\n      }) : await handler();\n      results[m.route.id] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[m.route.id] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router2, getRouteInfo, fetchAndDecode, ssr, basename) {\n  let routesParams = /* @__PURE__ */new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(args.matches.map(async (m, i) => m.resolve(async handler => {\n    routeDfds[i].resolve();\n    let routeId = m.route.id;\n    let {\n      hasLoader,\n      hasClientLoader,\n      hasShouldRevalidate\n    } = getRouteInfo(routeId);\n    let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n    let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n    if (!shouldCall) {\n      foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null &&\n      // This is a revalidation,\n      hasLoader &&\n      // for a route with a server loader,\n      hasShouldRevalidate === true);\n      return;\n    }\n    if (hasClientLoader) {\n      if (hasLoader) {\n        foundOptOutRoute = true;\n      }\n      try {\n        let result = await handler(async () => {\n          let {\n            data: data2\n          } = await fetchAndDecode(args, basename, [routeId]);\n          return unwrapSingleFetchResult(data2, routeId);\n        });\n        results[routeId] = {\n          type: \"data\",\n          result\n        };\n      } catch (e) {\n        results[routeId] = {\n          type: \"error\",\n          result: e\n        };\n      }\n      return;\n    }\n    if (hasLoader) {\n      routesParams.add(routeId);\n    }\n    try {\n      let result = await handler(async () => {\n        let data2 = await singleFetchDfd.promise;\n        return unwrapSingleFetchResult(data2, routeId);\n      });\n      results[routeId] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[routeId] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  await Promise.all(routeDfds.map(d => d.promise));\n  if ((!router2.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find(m => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(async handler => handler(async () => {\n    let {\n      data: data2\n    } = await fetchAndDecode(args, basename, [routeId]);\n    return unwrapSingleFetchResult(data2, routeId);\n  }));\n  return {\n    [fetcherMatch.route.id]: result\n  };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename) {\n  let url = typeof reqUrl === \"string\" ? new URL(reqUrl,\n  // This can be called during the SSR flow via PrefetchPageLinksImpl so\n  // don't assume window is available\n  typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let {\n    request\n  } = args;\n  let url = singleFetchUrl(request.url, basename);\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = {\n        data: void 0\n      };\n    }\n    return {\n      status: res.status,\n      data: {\n        routes\n      }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = {\n          redirect: typed[SingleFetchRedirectSymbol]\n        };\n      } else {\n        data2 = {\n          routes: typed\n        };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = {\n          redirect: typed\n        };\n      } else {\n        data2 = {\n          routes: {\n            [routeId]: typed\n          }\n        };\n      }\n    }\n    return {\n      status: res.status,\n      data: data2\n    };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return (0, import_turbo_stream.decode)(body, {\n    plugins: [function (type) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (type === \"SanitizedError\") {\n        let [name, message, stack] = rest;\n        let Constructor = Error;\n        if (name && name in global && typeof global[name] === \"function\") {\n          Constructor = global[name];\n        }\n        let error = new Constructor(message);\n        error.stack = stack;\n        return {\n          value: error\n        };\n      }\n      if (type === \"ErrorResponse\") {\n        let [data2, status, statusText] = rest;\n        return {\n          value: new ErrorResponseImpl(status, statusText, data2)\n        };\n      }\n      if (type === \"SingleFetchRedirect\") {\n        return {\n          value: {\n            [SingleFetchRedirectSymbol]: rest[0]\n          }\n        };\n      }\n      if (type === \"SingleFetchClassInstance\") {\n        return {\n          value: rest[0]\n        };\n      }\n      if (type === \"SingleFetchFallback\") {\n        return {\n          value: void 0\n        };\n      }\n    }]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...(revalidate ? {\n          \"X-Remix-Revalidate\": \"yes\"\n        } : null),\n        ...(reload ? {\n          \"X-Remix-Reload-Document\": \"yes\"\n        } : null),\n        ...(replace2 ? {\n          \"X-Remix-Replace\": \"yes\"\n        } : null)\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar React8 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/routes.tsx\nvar React7 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar React5 = __toESM(require(\"react\"));\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */React5.createElement(RemixRootDefaultErrorBoundary, {\n        error: this.state.error,\n        isOutsideRemixApp: true\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary(_ref15) {\n  let {\n    error,\n    isOutsideRemixApp\n  } = _ref15;\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */React5.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n    }\n  });\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */React5.createElement(BoundaryShell, {\n      title: \"Unhandled Thrown Response!\"\n    }, /* @__PURE__ */React5.createElement(\"h1\", {\n      style: {\n        fontSize: \"24px\"\n      }\n    }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */React5.createElement(BoundaryShell, {\n    title: \"Application Error!\",\n    isOutsideRemixApp\n  }, /* @__PURE__ */React5.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /* @__PURE__ */React5.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, errorInstance.stack), heyDeveloper);\n}\nfunction BoundaryShell(_ref16) {\n  let {\n    title,\n    renderScripts,\n    isOutsideRemixApp,\n    children\n  } = _ref16;\n  let {\n    routeModules\n  } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */React5.createElement(\"html\", {\n    lang: \"en\"\n  }, /* @__PURE__ */React5.createElement(\"head\", null, /* @__PURE__ */React5.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /* @__PURE__ */React5.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /* @__PURE__ */React5.createElement(\"title\", null, title)), /* @__PURE__ */React5.createElement(\"body\", null, /* @__PURE__ */React5.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, children, renderScripts ? /* @__PURE__ */React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nvar React6 = __toESM(require(\"react\"));\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */React6.createElement(BoundaryShell, {\n    title: \"Loading...\",\n    renderScripts: true\n  }, /* @__PURE__ */React6.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n    }\n  }));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach(route => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */React7.createElement(RemixRootDefaultErrorBoundary, {\n    error: useRouteError()\n  }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...(Component4 ? {\n        element: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(Component4, null))\n      } : {\n        Component: Component4\n      }),\n      ...(ErrorBoundary ? {\n        errorElement: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(ErrorBoundary, null))\n      } : {\n        ErrorBoundary\n      }),\n      ...(HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(HydrateFallback, null))\n      } : {\n        HydrateFallback\n      })\n    };\n  }\n  return {\n    Component: Component4,\n    ErrorBoundary,\n    HydrateFallback\n  };\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, \"\", groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  let parentId = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"\";\n  let routesByParentId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : groupRoutesByParentId(manifest);\n  let needsRevalidation = arguments.length > 7 ? arguments[7] : undefined;\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(typeof singleFetch === \"function\", \"No single fetch function available for route handler\");\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(/* @vite-ignore */\n      /* webpackIgnore: true */\n      modulePath);\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(dataRoute.path, routeModule, route, ssr, needsRevalidation)\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async (_ref17, singleFetch) => {\n        let {\n          request,\n          params,\n          context\n        } = _ref17;\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(routeModule, \"No `routeModule` available for critical-route loader\");\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(route, routeModule, isSpaMode);\n      dataRoute.action = (_ref18, singleFetch) => {\n        let {\n          request,\n          params,\n          context\n        } = _ref18;\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(routeModule, \"No `routeModule` available for critical-route action\");\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise(resolve => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModulesCache);\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let {\n            clientLoader\n          } = route.clientLoaderModule ? await import(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientLoaderModule) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientActionModule) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let {\n            clientAction\n          } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let {\n            unstable_clientMiddleware\n          } = route.clientMiddlewareModule ? await import(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientMiddlewareModule) : await getLazyRoute();\n          invariant2(unstable_clientMiddleware, \"No `unstable_clientMiddleware` export found\");\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(dataRoute.path, lazyRoute, route, ssr, needsRevalidation);\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, route.id, routesByParentId, needsRevalidation);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(manifestRoute.id, route.shouldRevalidate, needsRevalidation);\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map(p => p.paramName) : [];\n    const didParamsChange = opts => myParams.some(p => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return opts => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return opts => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return opts => fn({\n      ...opts,\n      defaultShouldRevalidate: true\n    });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return arg => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([prefetchRouteCssPromise, prefetchStyleLinks(route, routeModule)]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(ssr) {\n  return ssr === true;\n}\nfunction getPartialManifest(_ref19, router2) {\n  let {\n    sri,\n    ...manifest\n  } = _ref19;\n  let routeIds = new Set(router2.state.matches.map(m => m.route.id));\n  let segments = router2.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach(path => {\n    let matches = matchRoutes(router2.routes, path, router2.basename);\n    if (matches) {\n      matches.forEach(m => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce((acc, id) => Object.assign(acc, {\n    [id]: manifest.routes[id]\n  }), {});\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(ssr)) {\n    return void 0;\n  }\n  return async _ref20 => {\n    let {\n      path,\n      patch,\n      signal,\n      fetcherKey\n    } = _ref20;\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches([path], fetcherKey ? window.location.href : path, manifest, routeModules, ssr, isSpaMode, basename, patch, signal);\n  };\n}\nfunction useFogOFWarDiscovery(router2, manifest, routeModules, ssr, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter(path => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(lazyPaths, null, manifest, routeModules, ssr, isSpaMode, router2.basename, router2.patchRoutes);\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router2]);\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(/\\/+/g, \"/\");\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach(path => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, {\n      signal\n    });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\");\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\"Unable to discover routes due to manifest version mismatch.\");\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      throw new Error(\"Detected manifest version mismatch, reloading...\");\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach(p => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */new Set();\n  Object.values(patches).forEach(patch => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(parentId => patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)));\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(context, \"You must render this element inside a <HydratedRouter> element\");\n  return context;\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex(m => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    ssr,\n    renderMeta\n  } = useFrameworkContext();\n  let {\n    router: router2,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module: module2\n      } = manifestEntry;\n      let chunks = [...(clientActionModule ? [{\n        module: clientActionModule,\n        varName: `${routeVarName}_clientAction`\n      }] : []), ...(clientLoaderModule ? [{\n        module: clientLoaderModule,\n        varName: `${routeVarName}_clientLoader`\n      }] : []), ...(clientMiddlewareModule ? [{\n        module: clientMiddlewareModule,\n        varName: `${routeVarName}_clientMiddleware`\n      }] : []), ...(hydrateFallbackModule ? [{\n        module: hydrateFallbackModule,\n        varName: `${routeVarName}_HydrateFallback`\n      }] : []), {\n        module: module2,\n        varName: `${routeVarName}_main`\n      }];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module2)};`;\n      }\n      let chunkImportsSnippet = chunks.map(chunk => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map(chunk => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ?\n    // Inline a minimal manifest with the SSR matches\n    `window.__reactRouterManifest = ${JSON.stringify(getPartialManifest(manifest, router2), null, 2)};` : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */React9.createElement(React9.Fragment, null, /* @__PURE__ */React9.createElement(\"script\", {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: void 0\n    }), /* @__PURE__ */React9.createElement(\"script\", {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    }));\n  }, []);\n  let preloads = isHydrated ? [] : dedupe(manifest.entry.imports.concat(getModuleLinkHrefs(matches, manifest, {\n    includeHydrateFallback: true\n  })));\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  return isHydrated ? null : /* @__PURE__ */React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */React9.createElement(\"script\", {\n    \"rr-importmap\": \"\",\n    type: \"importmap\",\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify({\n        integrity: sri\n      })\n    }\n  }) : null, !enableFogOfWar ? /* @__PURE__ */React9.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: props.crossOrigin,\n    integrity: sri[manifest.url],\n    suppressHydrationWarning: true\n  }) : null, /* @__PURE__ */React9.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin,\n    integrity: sri[manifest.entry.module],\n    suppressHydrationWarning: true\n  }), preloads.map(path => /* @__PURE__ */React9.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin,\n    integrity: sri[path],\n    suppressHydrationWarning: true\n  })), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {}\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom-export/dom-router-provider.tsx\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React10.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n}\n\n// lib/dom-export/hydrated-router.tsx\nvar React11 = __toESM(require(\"react\"));\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(importMap.textContent).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter(_ref21) {\n  let {\n    unstable_getContext\n  } = _ref21;\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  let loaderData = ssrInfo.context.state.loaderData;\n  if (ssrInfo.context.isSpaMode) {\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: {\n        ...loaderData\n      }\n    };\n    let initialMatches = matchRoutes(routes, window.location, window.__reactRouterContext?.basename);\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, ssrInfo.context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getSingleFetchDataStrategy(() => router2, routeId => {\n      let manifestRoute = ssrInfo.manifest.routes[routeId];\n      invariant(manifestRoute, \"Route not found in manifest/routeModules\");\n      let routeModule = ssrInfo.routeModules[routeId];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        // In some cases the module may not be loaded yet and we don't care\n        // if it's got shouldRevalidate or not\n        hasShouldRevalidate: routeModule ? routeModule.shouldRevalidate != null : void 0\n      };\n    }, ssrInfo.context.ssr, ssrInfo.context.basename),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React11.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React11.useState(router.state.location);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */\n    React11.createElement(React11.Fragment, null, /* @__PURE__ */React11.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode\n      }\n    }, /* @__PURE__ */React11.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React11.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React11.createElement(React11.Fragment, null))\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  HydratedRouter,\n  RouterProvider\n});","map":{"version":3,"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__typeError","msg","TypeError","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","__accessCheck","obj","member","has","__privateGet","getter","__privateAdd","WeakSet","add","set","dom_export_exports","HydratedRouter","RouterProvider","RouterProvider2","module","exports","React10","require","ReactDOM","PopStateEventType","createBrowserHistory","options","arguments","length","undefined","createBrowserLocation","window2","globalHistory","pathname","search","hash","location","createLocation","state","usr","createBrowserHref","createPath","getUrlBasedHistory","invariant","message","Error","warning","cond","console","warn","e","createKey","Math","random","toString","substring","getHistoryState","index","idx","current","parsePath","_ref","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","history","action","listener","getIndex","replaceState","handlePop","nextIndex","delta","push","historyState","url","pushState","error","DOMException","assign","replace2","createURL","base","origin","href","replace","URL","listen","fn","addEventListener","removeEventListener","encodeLocation","go","n","_map","unstable_RouterContextProvider","constructor","init","Map","context","defaultValue","WeakMap","unsupportedLazyRouteObjectKeys","Set","isUnsupportedLazyRouteObjectKey","unsupportedLazyRouteFunctionKeys","isUnsupportedLazyRouteFunctionKey","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties2","parentPath","manifest","map","treePath","String","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","slice","joinPaths","routesMeta","concat","score","computeScore","forEach","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","pattern","matcher","compiledParams","compilePath","captureGroups","memo2","_ref2","paramName","splatValue","regexpSource","_","RegExp","v","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","DataWithResponseInit","data2","type","status","redirect","responseInit","headers","Headers","Response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","ResetLoaderDataSymbol","Symbol","createRouter","routerWindow","isBrowser","createElement","hydrationRouteProperties2","hydrationRouteProperties","mapRouteProperties","dataRoutes","inFlightDataRoutes","dataStrategyImpl","dataStrategy","defaultDataStrategyWithMiddleware","future","unstable_middleware","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialMatchesIsFOW","initialErrors","patchRoutesOnNavigation","getInternalRouterError","getShortCircuitMatches","fogOfWar","checkFogOfWar","active","initialized","m","lazy","loader","errors","findIndex","shouldLoadRouteOnHydration","router2","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","fetchersQueuedForDeletion","blockerFunctions","unblockBlockerHistoryUpdate","pendingRevalidationDfd","initialize","_ref3","size","blockerKey","shouldBlockNavigation","currentLocation","nextLocation","nextHistoryUpdatePromise","Promise","resolve","updateBlocker","then","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","initialHydration","dispose","clear","abort","deleteFetcher","deleteBlocker","subscribe","delete","newState","opts","unmountedFetchers","mountedFetchers","fetcher","subscriber","deletedFetchers","viewTransitionOpts","flushSync","completeNavigation","flushSync2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","k","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","fromRouteId","relative","submission","normalizeNavigateOptions","userReplace","pendingError","enableViewTransition","viewTransition","revalidate","createDeferred","interruptActiveLoads","promise","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","routesToUse","loadingNavigation","isHashChangeOnly","notFoundMatches","handleNavigational404","AbortController","request","createClientSideRequest","signal","scopedContext","unstable_getContext","pendingActionResult","findNearestBoundary","actionResult","handleAction","shortCircuited","routeId","isErrorResult","getLoadingNavigation","updatedMatches","handleLoaders","fetcherSubmission","getActionDataForCommit","isFogOfWar","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","partialMatches","actionMatch","getTargetMatch","method","dsMatches","getTargetedDataStrategyMatches","results","callDataStrategy","aborted","isRedirectResult","location2","normalizeRedirectLocation","response","startRedirectNavigation","boundaryMatch","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","revalidatingFetchers","getMatchesToLoad","shouldLoad","updatedFetchers2","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","controller","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect2","findRedirect","processLoaderData","updatedFetchers","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch2","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","detectAndHandle405Error","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","fetchMatches","actionResults","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","existingFetcher2","r","doneFetcher","isNavigation","redirectLocation","isDocumentReload","redirectNavigationType","fetcherKey","dataResults","callDataStrategyImpl","entries","isRedirectDataStrategyResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","loaderResultsPromise","fetcherResultsPromise","acc","getFetcher","queueFetcherForDeletion","count","markFetchersDone","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","_ref4","Array","blockerFunction","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","fogMatches","isNonHMR","localManifest","patch","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","fetch","_internalFetchControllers","isSubmissionNavigation","body","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","URLSearchParams","indexValues","getAll","append","qs","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","_ref5","parse","searchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","lazyRoutePropertiesToSkip","currentUrl","nextUrl","maxIdx","actionStatus","statusCode","shouldSkipRevalidation","baseShouldRevalidateArgs","currentParams","nextParams","forceShouldLoad","isNewLoader","getDataStrategyMatch","defaultShouldRevalidate","isNewRouteInstance","shouldRevalidateArgs","shouldRevalidateLoader","fetcherMatches","fetcherMatch","fetchController","fetcherDsMatches","hasData","hasError","hydrate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","childrenToPatch","uniqueChildren","newRoute","existingRoute","isSameRoute","aChild","bChild","lazyRoutePropertyCache","loadLazyRouteProperty","_ref6","routeToUpdate","lazyFn","cache","cachedPromise","propertyPromise","isUnsupported","staticRouteValue","isStaticallyDefined","values","lazyRouteFunctionCache","loadLazyRoute","lazyRoutePromise","lazyHandlerPromise","lazyRoutePromise2","lazyRoute","routeUpdates","lazyRouteProperty","lazyValue","catch","lazyKeys","lazyPropertyPromises","defaultDataStrategy","args","matchesToLoad","keyedResults","runMiddlewarePipeline","propagateResult","handler","errorHandler","middlewareState","handlerResult","tuples","flatMap","callRouteMiddleware","middlewareError","middlewares","reason","tuple","middleware","nextCalled","nextResult","next","getDataStrategyMatchLazyPromises","lazyMiddlewarePromise","lazyRoutePromises","unstable_shouldRevalidateArgs","isUsingNewApi","_lazyPromises","unstable_shouldCallHandler","handlerOverride","callLoaderOrAction","targetMatch","isStaticHandler","dataStrategyArgs","unstable_runClientMiddleware","cb","typedDataStrategyArgs","_ref7","onReject","isAction","runHandler","reject","abortPromise","actualHandler","ctx","handlerPromise","val","race","handlerError","handler2","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","trimmedMatches","normalizedLocation","protocol","isSameBasename","Request","processRouteLoaderData","skipLoaderErrorBubbling","foundError","loaderHeaders","newLoaderData","mergedLoaderData","_ref8","merged","_ref9","eligibleMatches","reverse","find","errorMessage","_window","transitions","sessionPositions","sessionStorage","getItem","isArray","setItem","res","rej","React3","React","DataRouterContext","createContext","displayName","DataRouterStateContext","ViewTransitionContext","isTransitioning","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","React2","ENABLE_DEV_WARNINGS","useInRouterContext","useContext","useLocation","OutletContext","useRoutesImpl","dataRouterState","navigator","navigator2","static","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","element","Component","renderedMatches","_renderMatches","Provider","navigationType","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","Fragment","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","_ref10","dataRouterContext","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errorIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","errors2","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","getDataRouterConsoleError","hookName","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","alreadyWarned","alreadyWarned2","warnOnce","condition","ENABLE_DEV_WARNINGS2","Deferred","_ref11","router","reactDomFlushSyncImpl","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","setState","useCallback","_ref12","isViewTransitionAvailable","startViewTransition","startTransition","skipTransition","t","finished","finally","useLayoutEffect","useEffect","renderPromise","transition2","useMemo","state2","Router","MemoizedDataRoutes","memo","DataRoutes","_ref13","_ref14","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","React9","invariant2","loadRouteModule","routeModulesCache","routeModule","__reactRouterContext","isSpaMode","reload","getRouteCssDescriptors","css","rel","prefetchRouteCss","descriptors","prefetchStyleLink","prefetchStyleLinks","links","isPreloadSupported","styleLinks","descriptor","isPageLinkDescriptor","as","media","matchMedia","querySelector","link","removeLink","head","contains","removeChild","onload","onerror","appendChild","object","page","getModuleLinkHrefs","includeHydrateFallback","dedupeHrefs","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","flat","_isPreloadSupported","el","relList","supports","createHtml","html","__html","React4","import_turbo_stream","createRequestInit","SingleFetchRedirectSymbol","NO_BODY_STATUS_CODES","getSingleFetchDataStrategy","getRouter","getRouteInfo","ssr","getSingleFetchDataStrategyImpl","fetchAndDecodeViaTurboStream","fetchAndDecode","singleFetchActionStrategy","foundRevalidatingServerLoader","hasLoader","hasClientLoader","nonSsrStrategy","singleFetchLoaderFetcherStrategy","singleFetchLoaderNavigationStrategy","result2","unwrapSingleFetchResult","routesParams","foundOptOutRoute","routeDfds","createDeferred2","singleFetchDfd","resolvePromise","hasShouldRevalidate","shouldCall","d","__reactRouterHdrActive","targetRoutes","stripIndexParam","indexValuesToKeep","indexValue","toKeep","singleFetchUrl","reqUrl","decodeViaTurboStream","typed","global","decode","plugins","_len","_key","Constructor","routeResult","React8","React7","React5","RemixErrorBoundary","RemixRootDefaultErrorBoundary","isOutsideRemixApp","_ref15","heyDeveloper","dangerouslySetInnerHTML","BoundaryShell","title","fontSize","errorInstance","errorString","background","color","overflow","_ref16","renderScripts","routeModules","useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","Scripts","React6","RemixRootDefaultHydrateFallback","groupRoutesByParentId","parentId","getRouteComponents","Component4","getRouteModuleComponent","createClientRoutesWithHMRRevalidationOptOut","needsRevalidation","initialState","createClientRoutes","preventInvalidServerHandlerCall","hasAction","noActionDefinedError","article","routesByParentId","fetchServerHandler","singleFetch","fetchServerLoader","fetchServerAction","prefetchModule","modulePath","prefetchRouteModuleChunks","route2","prefetchStylesAndCallHandler","cachedModule","linkPrefetchPromise","dataRoute","unstable_clientMiddleware","getShouldRevalidateFunction","hasInitialData","initialData","hasInitialError","initialError","isHydrationRequest","clientLoader","_ref17","serverLoader","shouldHydrateRouteLoader","_ref18","clientAction","serverAction","hasClientAction","getLazyRoute","setTimeout","routeModulePromise","loadRouteModuleWithBlockingLinks","clientActionPromise","hasClientMiddleware","clientMiddlewareModule","manifestRoute","wrapShouldRevalidateForHdr","myParams","p","didParamsChange","routeShouldRevalidate","handledRevalidation","prefetchRouteCssPromise","default","isEmptyObject","nextPaths","discoveredPathsMaxSize","discoveredPaths","URL_LIMIT","isFogOfWarEnabled","getPartialManifest","_ref19","sri","routeIds","initialRoutes","getPatchRoutesOnNavigationFunction","_ref20","fetchAndApplyManifestPatches","useFogOFWarDiscovery","connection","saveData","registerElement","tagName","getAttribute","fetchPatches","querySelectorAll","lazyPaths","debouncedFetchPatches","debounce","observer","MutationObserver","observe","documentElement","subtree","childList","attributes","attributeFilter","disconnect","MANIFEST_VERSION_STORAGE_KEY","errorReloadPath","manifestPath","version","serverPatches","ok","removeItem","knownRoutes","patches","addToFifoQueue","parentIds","queue","callback","wait","timeoutId","_len2","_key2","clearTimeout","useDataRouterContext","useDataRouterStateContext","FrameworkContext","getActiveMatches","isHydrated","errorIdx","serverHandoffString","renderMeta","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","streamScript","contextScript","routeModulesScript","hmr","runtime","routeIndex","routeVarName","manifestEntry","module2","chunks","varName","chunkImportsSnippet","chunk","mergedChunksSnippet","entry","suppressHydrationWarning","async","preloads","dedupe","integrity","crossOrigin","array","deserializeErrors","serialized","__type","__subType","ErrorConstructor","React11","ssrInfo","initSsrInfo","__reactRouterManifest","__reactRouterRouteModules","importMap","textContent","err","stateDecodingPromise","routerInitialized","createHydratedRouter","_ref21","localSsrInfo","stream","createRoutesForHMR","__reactRouterDataRouter","criticalCss","setCriticalCss","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation"],"sources":["C:/Users/divya/blog-app/client/node_modules/react-router/dist/development/dom-export.js"],"sourcesContent":["/**\n * react-router v7.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// dom-export.ts\nvar dom_export_exports = {};\n__export(dom_export_exports, {\n  HydratedRouter: () => HydratedRouter,\n  RouterProvider: () => RouterProvider2\n});\nmodule.exports = __toCommonJS(dom_export_exports);\n\n// lib/dom-export/dom-router-provider.tsx\nvar React10 = __toESM(require(\"react\"));\nvar ReactDOM = __toESM(require(\"react-dom\"));\n\n// lib/router/history.ts\nvar PopStateEventType = \"popstate\";\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nvar _map;\nvar unstable_RouterContextProvider = class {\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  );\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(\n      null,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors[m.route.id] !== void 0\n      );\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  }\n  let router2;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router2;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync: flushSync2 } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync2 === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync: flushSync2\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync: flushSync2 });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync: flushSync2 }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync: flushSync2 }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync2 = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync2,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync2, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync: flushSync2\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync: flushSync2 }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync: flushSync2 });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync: flushSync2 }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync: flushSync2 });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync2,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync2,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, { flushSync: flushSync2 });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync: flushSync2 });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync: flushSync2 }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync: flushSync2 }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync: flushSync2 });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync: flushSync2 }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router2 = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router2;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(\n    (newRoute) => !childrenToPatch.some(\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\n    )\n  );\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties2,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runMiddlewarePipeline(\n    args,\n    false,\n    () => defaultDataStrategy(args),\n    (error, routeId) => ({ [routeId]: { type: \"error\", result: error } })\n  );\n}\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let middlewareState = {\n    handlerResult: void 0\n  };\n  try {\n    let tuples = matches.flatMap(\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n    );\n    let result = await callRouteMiddleware(\n      { request, params, context },\n      tuples,\n      propagateResult,\n      middlewareState,\n      handler\n    );\n    return propagateResult ? result : middlewareState.handlerResult;\n  } catch (e) {\n    if (!middlewareState.middlewareError) {\n      throw e;\n    }\n    let result = await errorHandler(\n      middlewareState.middlewareError.error,\n      middlewareState.middlewareError.routeId\n    );\n    if (propagateResult || !middlewareState.handlerResult) {\n      return result;\n    }\n    return Object.assign(middlewareState.handlerResult, result);\n  }\n}\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    middlewareState.handlerResult = await handler();\n    return middlewareState.handlerResult;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    let result = await callRouteMiddleware(\n      args,\n      middlewares,\n      propagateResult,\n      middlewareState,\n      handler,\n      idx + 1\n    );\n    if (propagateResult) {\n      nextResult = result;\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (nextCalled) {\n      if (result === void 0) {\n        return nextResult;\n      } else {\n        return result;\n      }\n    } else {\n      return next();\n    }\n  } catch (error) {\n    if (!middlewareState.middlewareError) {\n      middlewareState.middlewareError = { routeId, error };\n    } else if (middlewareState.middlewareError.error !== error) {\n      middlewareState.middlewareError = { routeId, error };\n    }\n    throw error;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runMiddlewarePipeline(\n      typedDataStrategyArgs,\n      false,\n      () => cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n          );\n        }\n      }),\n      (error, routeId) => ({\n        [routeId]: { type: \"error\", result: error }\n      })\n    );\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [m._lazyPromises?.handler, m._lazyPromises?.route])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nvar React3 = __toESM(require(\"react\"));\n\n// lib/context.ts\nvar React = __toESM(require(\"react\"));\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nvar React2 = __toESM(require(\"react\"));\nvar ENABLE_DEV_WARNINGS = true;\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nvar OutletContext = React2.createContext(null);\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */ React2.createElement(\n        RenderedRoute,\n        {\n          match,\n          routeContext: {\n            outlet,\n            matches: matches2,\n            isDataRoute: dataRouterState != null\n          },\n          children\n        }\n      );\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n      RenderErrorBoundary,\n      {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error,\n        children: getChildren(),\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n      }\n    ) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router: router2,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router2.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync: flushSync2, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync2 === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router2.window != null && router2.window.document != null && typeof router2.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync2) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync2) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router2.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router2.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router2.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router2.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router2.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router2.createHref,\n      encodeLocation: router2.encodeLocation,\n      go: (n) => router2.navigate(n),\n      push: (to, state2, opts) => router2.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router2.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router2]);\n  let basename = router2.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router: router2,\n      navigator: navigator2,\n      static: false,\n      basename\n    }),\n    [router2, navigator2, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator2\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router2.routes,\n        future: router2.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator: navigator2,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator: navigator2,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator2, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\n\n// lib/dom/ssr/components.tsx\nvar React9 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar React4 = __toESM(require(\"react\"));\nvar import_turbo_stream = require(\"turbo-stream\");\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction getSingleFetchDataStrategy(getRouter, getRouteInfo, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    getRouteInfo,\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router2 = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m.route.id);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router2,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m.route.id);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router2, getRouteInfo, fetchAndDecode, ssr, basename) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(routeId);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  if ((!router2.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename);\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return (0, import_turbo_stream.decode)(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar React8 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/routes.tsx\nvar React7 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar React5 = __toESM(require(\"react\"));\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React5.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React5.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React5.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nvar React6 = __toESM(require(\"react\"));\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route,\n        routeModule,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(ssr) {\n  return ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router2) {\n  let routeIds = new Set(router2.state.matches.map((m) => m.route.id));\n  let segments = router2.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router2.routes, path, router2.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router2, manifest, routeModules, ssr, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router2.basename,\n          router2.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router2]);\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\n    /\\/+/g,\n    \"/\"\n  );\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      throw new Error(\"Detected manifest version mismatch, reloading...\");\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();\n  let { router: router2, static: isStatic, staticContext } = useDataRouterContext();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module: module2\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module: module2, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module2)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router2),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom-export/dom-router-provider.tsx\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React10.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nvar React11 = __toESM(require(\"react\"));\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(\n            importMap.textContent\n          ).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  unstable_getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  let loaderData = ssrInfo.context.state.loaderData;\n  if (ssrInfo.context.isSpaMode) {\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: { ...loaderData }\n    };\n    let initialMatches = matchRoutes(\n      routes,\n      window.location,\n      window.__reactRouterContext?.basename\n    );\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(\n          manifestRoute,\n          route,\n          ssrInfo.context.isSpaMode\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getSingleFetchDataStrategy(\n      () => router2,\n      (routeId) => {\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        invariant(manifestRoute, \"Route not found in manifest/routeModules\");\n        let routeModule = ssrInfo.routeModules[routeId];\n        return {\n          hasLoader: manifestRoute.hasLoader,\n          hasClientLoader: manifestRoute.hasClientLoader,\n          // In some cases the module may not be loaded yet and we don't care\n          // if it's got shouldRevalidate or not\n          hasShouldRevalidate: routeModule ? routeModule.shouldRevalidate != null : void 0\n        };\n      },\n      ssrInfo.context.ssr,\n      ssrInfo.context.basename\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React11.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React11.useState(router.state.location);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          ssr: ssrInfo.context.ssr,\n          isSpaMode: ssrInfo.context.isSpaMode\n        }\n      },\n      /* @__PURE__ */ React11.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React11.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React11.createElement(React11.Fragment, null))\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  HydratedRouter,\n  RouterProvider\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}